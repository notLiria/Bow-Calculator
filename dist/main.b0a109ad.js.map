{"version":3,"sources":["src/calculations.ts","src/main.ts"],"names":[],"mappings":"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","file":"main.b0a109ad.js","sourceRoot":"..","sourcesContent":["export function check_values(drawLength: number, length: number, stringLength: number): boolean {\r\n  return (drawLength * drawLength + ((length * length) / 4) - ((stringLength * stringLength) / 4)) > 0;\r\n}\r\n\r\nexport function find_root(drawLength: number, length: number, stringLength: number) {\r\n  // Rename variables to the way they appear in the equation\r\n  // Return the value of r that is reasonably close to being a root\r\n  const DL = drawLength;\r\n  const S = stringLength;\r\n  const L = length;\r\n  const allowableErr = 0.01;\r\n  let r = DL;\r\n  let currValue = calc_value(DL, S, L, r);\r\n\r\n  while (Math.abs(currValue) > allowableErr && r < 5000) {\r\n    r = r + allowableErr;\r\n    currValue = calc_value(DL, S, L, r);\r\n  }\r\n  return r;\r\n}\r\n\r\nexport function calc_value(dl: number, s: number, l: number, r: number) {\r\n  // Returns the value of this function\r\n  return (r ** 2) + ((r - dl) ** 2) - 2 * r * (r - dl) * Math.cos(l / (2 * r)) - ((s / 2) ** 2);\r\n}\r\n\r\nexport function calc_p(r: number, t: number){\r\n  return r - Math.sqrt((r ** 2) - (t ** 2))\r\n}\r\n\r\n\r\n","import * as Calculations from \"./calculations\";\r\nimport { Scene } from './scene';\r\nimport * as p5 from 'p5';\r\n\r\nlet btn = document.getElementById(\"calc\");\r\nbtn.addEventListener(\"click\", calc_radius);\r\n\r\n\r\n\r\nfunction calc_radius() {\r\n\r\n  const L = parseFloat((document.getElementById(\"length\") as HTMLInputElement).value);\r\n  const S = parseFloat((document.getElementById(\"string-length\") as HTMLInputElement).value);\r\n  const DL = parseFloat((document.getElementById(\"draw-length\") as HTMLInputElement).value);\r\n  const t = parseFloat((document.getElementById(\"tillering-gizmo\") as HTMLInputElement).value);\r\n\r\n\r\n  // Check if the values make sense\r\n  const valid = Calculations.check_values(DL, L, S);\r\n  if (valid === false) {\r\n    document.getElementById(\"error\").innerText = \"ERROR YOU HAVE AN INVALID COMBINATION OF VALUES\";\r\n  }\r\n  else{\r\n    document.getElementById(\"error\").innerText = \"\";\r\n    const root = Calculations.find_root(DL, L, S);\r\n    const p = Calculations.calc_p(root, t)\r\n    document.getElementById(\"radius\").innerText = \"R (in cm) : \" + root.toString();\r\n    document.getElementById(\"p\").innerText = \"P (in cm) : \" + p.toString();\r\n  }\r\n}\r\n\r\n\r\n"]}